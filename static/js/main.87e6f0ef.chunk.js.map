{"version":3,"sources":["Components/Navbar.js","Components/TextBox.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","id","type","onClick","toggleMode","htmlFor","TextBox","useState","text","setText","fWord","findWord","rWord","replaceWord","heading","value","placeholder","style","backgroundColor","color","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","console","log","replaceAll","length","trim","defaultProps","about","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.87e6f0ef.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n   \r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        {/* <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button> */}\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.about}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n        <div className=\"form-check form-switch\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id=\"flexSwitchCheckDefault\"\r\n            onClick={props.toggleMode}\r\n          />\r\n          <label\r\n            className={`form-check-label text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n            htmlFor=\"flexSwitchCheckDefault\"\r\n          >\r\n            Dark Mode\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n  about: \"Set About Here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextBox(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\",\"success\")\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\",\"success\")\r\n  };\r\n  const handleClearClick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared\",\"success\")\r\n  };\r\n  const handlefindChange = (event) => {\r\n    findWord(event.target.value);\r\n  };\r\n  const handleReplaceChange = (event) => {\r\n    console.log(replaceWord(event.target.value));\r\n  };\r\n  const handleReplaceClick = () => {\r\n    let newText = text.replaceAll(fWord, rWord);\r\n    setText(newText);\r\n    props.showAlert(`${fWord} is replace by ${rWord} `,\"success\")\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopy = () =>{\r\n    var text = document.getElementById(\"mybox\")\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copy To Clipboard\",\"success\")\r\n  }\r\n  const handleExtraSpaces = () =>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Have Been Removed\",\"success\")\r\n  }\r\n  const [text, setText] = useState(\"\");\r\n  const [fWord, findWord] = useState(\"\");\r\n  const [rWord, replaceWord] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1 className=\"my-3\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <label\r\n            htmlFor=\"exampleFormControlTextarea1\"\r\n            className=\"form-label\"\r\n          ></label>\r\n          <textarea\r\n            value={text}\r\n            placeholder = \"Enter Your Text Here\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"#343a40\" : \"white\",\r\n              color: props.mode === \"light\" ? \"white\" : \"black\",\r\n            }}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            id=\"mybox\"\r\n            rows=\"10\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success mx-1\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success mx-1 my-2\"\r\n          onClick={handleLoClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success mx-1 my-2\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success mx-1 my-2\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success mx-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <h4 className=\"my-3\">Replace Word</h4>\r\n        <textarea\r\n          value={fWord}\r\n          onChange={handlefindChange}\r\n          style={{\r\n            backgroundColor: props.mode === \"light\" ? \"#343a40\" : \"white\",\r\n            color: props.mode === \"light\" ? \"white\" : \"black\"\r\n          }}\r\n          placeholder=\"find\"\r\n          className=\"form-control my-2\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"1\"\r\n        ></textarea>\r\n        <textarea\r\n          value={rWord}\r\n          onChange={handleReplaceChange}\r\n          style={{\r\n            backgroundColor: props.mode === \"light\" ? \"#343a40\" : \"white\",\r\n            color: props.mode === \"light\" ? \"white\" : \"black\",\r\n          }}\r\n          placeholder=\"replace\"\r\n          className=\"form-control my-2\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"1\"\r\n        ></textarea>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success my-2\"\r\n          onClick={handleReplaceClick}\r\n        >\r\n          Replace Words\r\n        </button>\r\n      </div>\r\n      <h2 className=\"my-3\">Your Text Summary</h2>\r\n      <p>\r\n        {text.length > 0 ? text.trim().split(\" \").length : 0} Words {text.length} Characters\r\n      </p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n      <h2 className=\"my-3\"> Preview </h2>\r\n      <p>{text}</p>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n   const capitalize = (word) =>{\r\n       const lower = word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n   }\r\n    return(\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextBox from \"./Components/TextBox\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n// import About from \"./Components/About\";\n\n// React Router//\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#141e30\";\n      document.body.style.color = \"#fff\";\n      showAlert(\"Dark Mode Has Been Enabled.\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      document.body.style.color = \"#000\";\n      showAlert(\"Light Mode Has Been Enabled.\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"Text-Transform\"\n          about=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} msg=\"Success\" />\n        <div className=\"container\">\n          {/* <Switch> */}\n            {/* <Route  exact path=\"/about\"> */}\n            {/* <About/> */}\n          {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextBox\n                heading=\"Enter Your Text Below\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}